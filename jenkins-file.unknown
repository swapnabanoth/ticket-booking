pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "swapna/ticketbooking"
        DOCKER_HUB_CREDENTIALS = 'dockerhub-login'  // Jenkins credential ID
        KUBECONFIG_CREDENTIALS = 'kubeconfig-cred'  // Kubernetes config (if used)
    }

    stages {

        stage('Checkout Code') {
            steps {
                echo 'üì¶ Checking out source code from GitHub...'
                git branch: 'main', url: 'https://github.com/yourusername/ticket-booking-app.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'üê≥ Building Docker image...'
                script {
                    sh 'docker build -t $DOCKER_IMAGE:latest .'
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                echo 'üì§ Pushing image to Docker Hub...'
                withCredentials([usernamePassword(credentialsId: "${DOCKER_HUB_CREDENTIALS}", usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
                    docker push $DOCKER_IMAGE:latest
                    '''
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                echo 'üöÄ Deploying to Kubernetes cluster...'
                withCredentials([file(credentialsId: "${KUBECONFIG_CREDENTIALS}", variable: 'KUBECONFIG')]) {
                    sh '''
                    kubectl apply -f k8s/deployment.yaml
                    kubectl apply -f k8s/service.yaml
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Deployment Successful! Ticket Booking App is Live!'
        }
        failure {
            echo '‚ùå Pipeline Failed. Please check the logs.'
        }
    }
}
